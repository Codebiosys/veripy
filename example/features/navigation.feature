@fixture.browser.chrome
Feature: Navigation Sentences
    Nagivation sentences allow a tester to move around the system

    Background: Screen Size
      Given the browser window is 600 by 400 pixels

    @example_app @navigation @actions @browser_at_page
    Scenario: The Demo App can be navigated to
        Given that the browser is at "localhost-hello"
        Then take a screen shot

    @example_app @navigation @actions @browser_size
    Scenario: The Demo App browser can be resized
        Given that the browser is at "localhost-hello"
        Given the browser window is 600 by 400 pixels
        Then take a screen shot

    @example_app @navigation @actions @browser_switch_page
    Scenario: The Demo App page can be switched
        Given that the browser is at "localhost-hello"
        Given the browser is now at "other-page"
          """
          Context will change but the current page will not.
          Other Random Number is a property of other page, but not localhost-hello
          """
        Then the "Other Random Number" is not visible

    @example_app @navigation @actions @browser_wait_switch_page
    Scenario: The Demo App page can be switched
        Given that the browser is at "localhost-hello"
        When the browser is at "other-page" after 1 seconds
          """
          Context will change but the current page will not.
          Other Random Number is a property of other page, but not localhost-hello
          """
        Then the "Other Random Number" is not visible

    @example_app @navigation @actions @window_focus_last
    Scenario: The Demo App tab can be switched by clicking a link
        Given that the browser is at "localhost-hello"
        When the user clicks the "Other Tab Link"
        Then the browser should be at "localhost-hello"

        When the user switches to the last opened tab
        Then the browser should be at "other-page"

    @example_app @navigation @actions @window_close_last
    Scenario: The Demo App tab can be switched by clicking a link and then reverted
        Given that the browser is at "localhost-hello"
        When the user clicks the "Other Tab Link"
        Then the browser should be at "localhost-hello"

        When the user switches to the last opened tab
        Then the browser should be at "other-page"

        When the user closes the last opened tab
        Then the browser should be at "localhost-hello"
        And take a screen shot

    @example_app @navigation @actions @click_element
    Scenario: The Demo App page can be switched by clicking a link

      Given that the browser is at "localhost-hello"
      Then write the "Random Number" generated by the system

      When the user clicks the "Other Page Link"
      Then the browser should be at "other-page"
      Then write the "Other Random Number" generated by the system

    @example_app @navigation @actions @click_element @exception
    Scenario: The Demo App page will raise the correct error when clicking on a missing element
      Given that the browser is at "localhost-hello"
      Then if 'the user clicks the "Missing Link"', the system responds with
        """
        The "Missing Link" was not found on the page.
        """

    @example_app @navigation @actions @click_element @xfail
    Scenario: XFail: The Demo App page will raise the correct error when clicking on a missing element
    Given that the browser is at "localhost-hello"
    When the user clicks the "Missing Link"
    Then take a screen shot

    @example_app @navigation @actions @click_nth_element
    Scenario: The Nth item sentence finds the correct item clicks it
        Given that the browser is at "localhost-hello"
        When the user clicks on the 2nd option in the "Checkboxes"

    @example_app @navigation @actions @click_nth_element @exception
    Scenario: The Nth item sentence will raise the correct error when clicking on a missing element
        Given that the browser is at "localhost-hello"
        Then if 'the user clicks on the 2nd option in the "Hidden Checkboxes"', the system responds with
             """
             The "Hidden Checkboxes" does not have a 2nd option that is clickable.
             """
        Then if 'the user clicks on the 99th option in the "Checkboxes"', the system responds with
            """
            The "Checkboxes" does not have a 99th option.
            """
        Then if 'the user clicks on the 2nd option in the "Missing Link"', the system responds with
            """
            The "Missing Link" was not found on the page.
            """

    @example_app @navigation @actions @press_keyboard_key
    Scenario: The tester can press keyboard keys
        Given that the browser is at "localhost-hello"
        When "Example Text" is entered into the "Required Field"
        When the user presses the "tab" key
        When "New Text" is entered into the current field
        Then the "Optional Field" has the value "New Text"


    @example_app @navigation @actions @wait_for_element @wait_time
    Scenario: The tester can wait for an element
        Given that the browser is at "localhost-hello"
        When after 1 second
        Then the "Required Field" is visible after 1 second
            """
            This checks for visibility; it just waits 1 second before
            checking if the element is visible
            """
        Then it is not the case that the "Missing Field" is visible after 1 second
        Then take a screen shot


    @example_app @navigation @checks @browser_at_page
    Scenario: Test that the user can implicitly switch page contexts
        Given that the browser is at "localhost-hello"
        When the user clicks the "Other Page Link"
        Then the browser is now at "other-page"
        Then take a screen shot

        @example_app @navigation @checks @wait_browser_at_page
        Scenario: Test that the user can implicitly switch page contexts
            Given that the browser is at "localhost-hello"
            When the user clicks the "Other Page Link"
            Then after 1 second, the browser is at "other-page"
            Then take a screen shot

    @example_app @navigation @checks @browser_at_page @exceptions
    Scenario: Test that the user can identify failed page context switches
        Given that the browser is at "localhost-hello"
        When the user clicks the "Other Page Link"
        Then the statement that 'the browser should be at "login"' responds with
            """
            Expected to be on the Page "login", but was not.
            """
        Then the browser is now at "other-page"


    @example_app @navigation @checks @browser_at_page @xfail
    Scenario: XFail: Test that the user can identify failed page context switches
        Given that the browser is at "localhost-hello"
        When the user clicks the "Other Page Link"
        Then the browser is now at "login"


    @example_app @navigation @checks @browser_at_page @outline
    Scenario Outline: Test that the system can handle Scenario outlines
        Given that the browser is at "<page-name>"
        Then the browser should be at "<page-name>"
        Then the page title should be "<page-title>"

        Examples: Page Name "<name>"
        | name          | page-name          | page-title  |
        | Localhost     | localhost-hello    | Hello World |
        | Other Page    | other-page          | Other Page |
